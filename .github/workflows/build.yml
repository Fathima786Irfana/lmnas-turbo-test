name: Turbo Image Build
on:
  push:
    branches:
      - main
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Read sampleenv and generate .env dynamically
        id: generate_env
        env:
          SUBSCRIBE_URL: ${{ secrets.SUBSCRIBE_URL }}
          AUTH_KEY: ${{ secrets.AUTH_KEY }}
        run: |
          echo "Generating build.env..."
          touch build.env

          while IFS='=' read -r raw_key _; do
            key=$(echo "$raw_key" | xargs)  # Trim whitespace
            if [ -n "$key" ]; then
              value="${!key}"
              if [ -z "$value" ]; then
                echo "⚠️ $key is missing or empty"
              fi
              echo "$key=$value" >> build.env
            fi
          done < sampleenv

          echo ""
          echo "🟢 Generated build.env content:"
          echo "-------------------------------"
          cat build.env
          echo "-------------------------------"

          ENCODED=$(cat build.env | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "BUILD_ENV_CONTENT=$ENCODED" >> $GITHUB_ENV
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          dockerfile: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test:v2
          build-args: |
            BUILD_ENV_CONTENT=${{ env.BUILD_ENV_CONTENT }}
            